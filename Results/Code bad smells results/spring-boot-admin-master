"Problem","Package","File","Priority","Line","Description","Rule set","Rule"
"1","","C:\Users\MYPC\spring-boot-admin-master\.mvn\wrapper\MavenWrapperDownloader.java","3","71","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","de.codecentric.boot.admin.client.registration","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-client\src\main\java\de\codecentric\boot\admin\client\registration\DefaultApplicationRegistrator.java","3","30","Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead","Best Practices","LooseCoupling"
"1","de.codecentric.boot.admin.client.registration","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-client\src\test\java\de\codecentric\boot\admin\client\registration\AbstractRegistrationClientTest.java","3","40","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-master\.mvn\wrapper\MavenWrapperDownloader.java","3","71","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","de.codecentric.boot.admin.client.registration","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-master\spring-boot-admin-client\src\main\java\de\codecentric\boot\admin\client\registration\DefaultApplicationRegistrator.java","3","30","Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead","Best Practices","LooseCoupling"
"1","de.codecentric.boot.admin.client.registration","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-master\spring-boot-admin-client\src\test\java\de\codecentric\boot\admin\client\registration\AbstractRegistrationClientTest.java","3","40","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.domain.entities","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\domain\entities\Instance.java","3","255","Avoid using implementation types like 'ArrayList'; use the interface instead","Best Practices","LooseCoupling"
"1","de.codecentric.boot.admin.server.domain.values","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\domain\values\Endpoints.java","3","80","Avoid using implementation types like 'HashMap'; use the interface instead","Best Practices","LooseCoupling"
"1","de.codecentric.boot.admin.server.domain.values","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\domain\values\Tags.java","3","93","Avoid using implementation types like 'LinkedHashMap'; use the interface instead","Best Practices","LooseCoupling"
"1","de.codecentric.boot.admin.server.notify","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\notify\RemindingNotifier.java","3","52","Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead","Best Practices","LooseCoupling"
"1","de.codecentric.boot.admin.server.utils.jackson","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\utils\jackson\EndpointMixin.java","3","29","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.utils.jackson","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\utils\jackson\EndpointsMixin.java","3","32","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.utils.jackson","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\utils\jackson\InstanceDeregisteredEventMixin.java","3","32","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.utils.jackson","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\utils\jackson\InstanceEndpointsDetectedEventMixin.java","3","34","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.utils.jackson","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\utils\jackson\InstanceEventMixin.java","3","44","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.utils.jackson","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\utils\jackson\InstanceInfoChangedEventMixin.java","3","33","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.utils.jackson","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\utils\jackson\InstanceRegisteredEventMixin.java","3","33","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.utils.jackson","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\utils\jackson\InstanceRegistrationUpdatedEventMixin.java","3","34","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.utils.jackson","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\utils\jackson\InstanceStatusChangedEventMixin.java","3","33","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-master\spring-boot-admin-server\src\test\java\de\codecentric\boot\admin\server\AbstractAdminApplicationTest.java","3","39","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.domain.entities","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-master\spring-boot-admin-server\src\test\java\de\codecentric\boot\admin\server\domain\entities\AbstractInstanceRepositoryTest.java","3","32","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.notify","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-master\spring-boot-admin-server\src\test\java\de\codecentric\boot\admin\server\notify\HazelcastNotificationTriggerTest.java","3","46","Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead","Best Practices","LooseCoupling"
"1","de.codecentric.boot.admin.server.web","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-master\spring-boot-admin-server\src\test\java\de\codecentric\boot\admin\server\web\AbstractInstancesProxyControllerIntegrationTest.java","3","58","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.domain.entities","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\domain\entities\Instance.java","3","255","Avoid using implementation types like 'ArrayList'; use the interface instead","Best Practices","LooseCoupling"
"1","de.codecentric.boot.admin.server.domain.values","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\domain\values\Endpoints.java","3","80","Avoid using implementation types like 'HashMap'; use the interface instead","Best Practices","LooseCoupling"
"1","de.codecentric.boot.admin.server.domain.values","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\domain\values\Tags.java","3","93","Avoid using implementation types like 'LinkedHashMap'; use the interface instead","Best Practices","LooseCoupling"
"1","de.codecentric.boot.admin.server.notify","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\notify\RemindingNotifier.java","3","52","Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead","Best Practices","LooseCoupling"
"1","de.codecentric.boot.admin.server.utils.jackson","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\utils\jackson\EndpointMixin.java","3","29","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.utils.jackson","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\utils\jackson\EndpointsMixin.java","3","32","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.utils.jackson","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\utils\jackson\InstanceDeregisteredEventMixin.java","3","32","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.utils.jackson","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\utils\jackson\InstanceEndpointsDetectedEventMixin.java","3","34","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.utils.jackson","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\utils\jackson\InstanceEventMixin.java","3","44","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.utils.jackson","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\utils\jackson\InstanceInfoChangedEventMixin.java","3","33","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.utils.jackson","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\utils\jackson\InstanceRegisteredEventMixin.java","3","33","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.utils.jackson","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\utils\jackson\InstanceRegistrationUpdatedEventMixin.java","3","34","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.utils.jackson","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-server\src\main\java\de\codecentric\boot\admin\server\utils\jackson\InstanceStatusChangedEventMixin.java","3","33","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-server\src\test\java\de\codecentric\boot\admin\server\AbstractAdminApplicationTest.java","3","39","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.domain.entities","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-server\src\test\java\de\codecentric\boot\admin\server\domain\entities\AbstractInstanceRepositoryTest.java","3","32","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
"1","de.codecentric.boot.admin.server.notify","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-server\src\test\java\de\codecentric\boot\admin\server\notify\HazelcastNotificationTriggerTest.java","3","46","Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead","Best Practices","LooseCoupling"
"1","de.codecentric.boot.admin.server.web","C:\Users\MYPC\spring-boot-admin-master\spring-boot-admin-server\src\test\java\de\codecentric\boot\admin\server\web\AbstractInstancesProxyControllerIntegrationTest.java","3","58","This abstract class does not have any abstract methods","Best Practices","AbstractClassWithoutAbstractMethod"
